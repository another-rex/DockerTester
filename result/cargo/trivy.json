{
  "SchemaVersion": 2,
  "CreatedAt": "2024-02-07T08:13:55.908417766Z",
  "ArtifactName": "docker-scanning-test-cargo",
  "ArtifactType": "container_image",
  "Metadata": {
    "OS": {
      "Family": "debian",
      "Name": "trixie/sid"
    },
    "ImageID": "sha256:8a0dca6a69504bd44d7244d9ae731b17bca115518c83d4d3188163dd52ac53a8",
    "DiffIDs": [
      "sha256:941bb154709688a41c743238a1dca0e0d1d28a247b89567cb2c18436271ebe1e",
      "sha256:2063ea9d3a4800d9e3183626d759d8db122d290af136f9c3ecc7e23f1a715a39",
      "sha256:2e33d89c0916df6e9d8eac93210db146aaf121522045eca6d158179d8aad64cc",
      "sha256:da6b2da8881e85f9771e2a1687a64ab4c36477ed32d5d45b047e633eac1aa854",
      "sha256:93fb3f64419f9b38717046d7d03ad8b67407afb0be6d4647cbca1709dec3e3ce",
      "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
      "sha256:13fb4f1909c461284e677b530d420a3f42981c8ee7e210a216ea1a5e631f2b35",
      "sha256:3356e815eef1b50fc255850e27226e234e6285ed425c43dd39eed31732fa8a5a"
    ],
    "RepoTags": [
      "docker-scanning-test-cargo:latest"
    ],
    "ImageConfig": {
      "architecture": "amd64",
      "created": "2024-02-07T08:11:48.11125765Z",
      "history": [
        {
          "created": "2024-01-31T22:37:49Z",
          "created_by": "/bin/sh -c #(nop) ADD file:78f5e584e45cc3316db2f908517a75399e41b10f9055de8915646c20535298fc in / "
        },
        {
          "created": "2024-01-31T22:37:49Z",
          "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
          "empty_layer": true
        },
        {
          "created": "2024-02-06T06:50:58Z",
          "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-02-06T06:50:58Z",
          "created_by": "RUN /bin/sh -c apt-get -y update \u0026\u0026     apt-get -y install     pkg-config     build-essential     curl # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-02-06T06:51:20Z",
          "created_by": "RUN /bin/sh -c curl https://sh.rustup.rs -sSf | bash -s -- -y # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-02-06T06:51:20Z",
          "created_by": "ENV PATH=/root/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-02-06T06:54:55Z",
          "created_by": "RUN /bin/sh -c rustup default stable # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-02-06T06:54:55Z",
          "created_by": "RUN /bin/sh -c mkdir /src # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-02-06T06:54:55Z",
          "created_by": "WORKDIR /src",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-02-07T08:11:23Z",
          "created_by": "COPY example/ ./ # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-02-07T08:11:48Z",
          "created_by": "RUN /bin/sh -c cargo build --release # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-02-07T08:11:48Z",
          "created_by": "ENTRYPOINT [\"./target/release/example\"]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        }
      ],
      "os": "linux",
      "rootfs": {
        "type": "layers",
        "diff_ids": [
          "sha256:941bb154709688a41c743238a1dca0e0d1d28a247b89567cb2c18436271ebe1e",
          "sha256:2063ea9d3a4800d9e3183626d759d8db122d290af136f9c3ecc7e23f1a715a39",
          "sha256:2e33d89c0916df6e9d8eac93210db146aaf121522045eca6d158179d8aad64cc",
          "sha256:da6b2da8881e85f9771e2a1687a64ab4c36477ed32d5d45b047e633eac1aa854",
          "sha256:93fb3f64419f9b38717046d7d03ad8b67407afb0be6d4647cbca1709dec3e3ce",
          "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
          "sha256:13fb4f1909c461284e677b530d420a3f42981c8ee7e210a216ea1a5e631f2b35",
          "sha256:3356e815eef1b50fc255850e27226e234e6285ed425c43dd39eed31732fa8a5a"
        ]
      },
      "config": {
        "Entrypoint": [
          "./target/release/example"
        ],
        "Env": [
          "PATH=/root/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
          "DEBIAN_FRONTEND=noninteractive"
        ],
        "WorkingDir": "/src"
      }
    }
  },
  "Results": [
    {
      "Target": "docker-scanning-test-cargo (debian trixie/sid)",
      "Class": "os-pkgs",
      "Type": "debian"
    },
    {
      "Target": "src/Cargo.lock",
      "Class": "lang-pkgs",
      "Type": "cargo",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "GHSA-8r5v-vm4m-4g25",
          "PkgID": "h2@0.3.23",
          "PkgName": "h2",
          "InstalledVersion": "0.3.23",
          "FixedVersion": "0.3.24, 0.4.2",
          "Status": "fixed",
          "Layer": {
            "DiffID": "sha256:13fb4f1909c461284e677b530d420a3f42981c8ee7e210a216ea1a5e631f2b35"
          },
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://github.com/advisories/GHSA-8r5v-vm4m-4g25",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Rust",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arust"
          },
          "Title": "Resource exhaustion vulnerability in h2 may lead to Denial of Service (DoS)",
          "Description": "An attacker with an HTTP/2 connection to an affected endpoint can send a steady stream of invalid frames to force the\ngeneration of reset frames on the victim endpoint.\nBy closing their recv window, the attacker could then force these resets to be queued in an unbounded fashion,\nresulting in Out Of Memory (OOM) and high CPU usage.\n\nThis fix is corrected in [hyperium/h2#737](https://github.com/hyperium/h2/pull/737), which limits the total number of\ninternal error resets emitted by default before the connection is closed.\n",
          "Severity": "MEDIUM",
          "VendorSeverity": {
            "ghsa": 2
          },
          "References": [
            "https://github.com/hyperium/h2",
            "https://github.com/hyperium/h2/commit/59570e11ccddbec85f67a0c7aa353f7730c68854",
            "https://github.com/hyperium/h2/commit/d919cd6fd8e0f4f5d1f6282fab0b38a1b4bf999c",
            "https://github.com/hyperium/h2/pull/737",
            "https://rustsec.org/advisories/RUSTSEC-2024-0003.html"
          ]
        },
        {
          "VulnerabilityID": "GHSA-r7qv-8r2h-pg27",
          "PkgID": "shlex@1.2.0",
          "PkgName": "shlex",
          "InstalledVersion": "1.2.0",
          "FixedVersion": "1.3.0",
          "Status": "fixed",
          "Layer": {
            "DiffID": "sha256:13fb4f1909c461284e677b530d420a3f42981c8ee7e210a216ea1a5e631f2b35"
          },
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://github.com/advisories/GHSA-r7qv-8r2h-pg27",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Rust",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arust"
          },
          "Title": "Multiple issues involving quote API in shlex",
          "Description": "## Issue 1: Failure to quote characters\n\nAffected versions of this crate allowed the bytes `{` and `\\xa0` to appear\nunquoted and unescaped in command arguments.\n\nIf the output of `quote` or `join` is passed to a shell, then what should be a\nsingle command argument could be interpreted as multiple arguments.\n\nThis does not *directly* allow arbitrary command execution (you can't inject a\ncommand substitution or similar).  But depending on the command you're running,\nbeing able to inject multiple arguments where only one is expected could lead\nto undesired consequences, potentially including arbitrary command execution.\n\nThe flaw was corrected in version 1.2.1 by escaping additional characters.\nUpdating to 1.3.0 is recommended, but 1.2.1 offers a more minimal fix if\ndesired.\n\nWorkaround: Check for the bytes `{` and `\\xa0` in `quote`/`join` input or\noutput.\n\n(Note: `{` is problematic because it is used for glob expansion.  `\\xa0` is\nproblematic because it's treated as a word separator in [specific\nenvironments][solved-xa0].)\n\n## Issue 2: Dangerous API w.r.t. nul bytes\n\nVersion 1.3.0 deprecates the `quote` and `join` APIs in favor of `try_quote`\nand `try_join`, which behave the same except that they have `Result` return\ntype, returning `Err` if the input contains nul bytes.\n\nStrings containing nul bytes generally cannot be used in Unix command arguments\nor environment variables, and most shells cannot handle nul bytes even\ninternally.  If you try to pass one anyway, then the results might be\nsecurity-sensitive in uncommon scenarios.  [More details here.][nul-bytes]\n\nDue to the low severity, the behavior of the original `quote` and `join` APIs\nhas not changed; they continue to allow nuls.\n\nWorkaround: Manually check for nul bytes in `quote`/`join` input or output.\n\n## Issue 3: Lack of documentation for interactive shell risks\n\nThe `quote` family of functions does not and cannot escape control characters.\nWith non-interactive shells this is perfectly safe, as control characters have\nno special effect.  But if you writing directly to the standard input of an\ninteractive shell (or through a pty), then control characters [can cause\nmisbehavior including arbitrary command injection.][control-characters]\n\nThis is essentially unfixable, and has not been patched.  But as of version\n1.3.0, documentation has been added.\n\nFuture versions of `shlex` may add API variants that avoid the issue at the\ncost of reduced portability.\n\n[solved-xa0]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#solved-xa0\n[nul-bytes]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#nul-bytes\n[control-characters]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#control-characters-interactive-contexts-only",
          "Severity": "HIGH",
          "VendorSeverity": {
            "ghsa": 3
          },
          "References": [
            "https://github.com/comex/rust-shlex",
            "https://github.com/comex/rust-shlex/security/advisories/GHSA-r7qv-8r2h-pg27",
            "https://rustsec.org/advisories/RUSTSEC-2024-0006.html"
          ]
        }
      ]
    }
  ]
}
